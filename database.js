// database.js
// –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±–ª–∞—á–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –¥–∞–Ω–Ω—ã—Ö –Ω–∞ GitHub

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è GitHub
const GITHUB_OWNER = 'Alexandrpen'; // –í–ª–∞–¥–µ–ª–µ—Ü —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
const GITHUB_REPO = 'Shnek-Journal'; // –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub API –∫–∞–∫ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
class GitHubDatabase {
    constructor() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–æ–π—Å—Ç–≤ –∫–ª–∞—Å—Å–∞
        this.owner = GITHUB_OWNER;
        this.repo = GITHUB_REPO;
        this.branch = 'main'; // –í–µ—Ç–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        this.token = null; // –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ–∑–∂–µ)
        this.dataFile = 'journal-data.json'; // –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    }

    // ===== –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–´ –° –¢–û–ö–ï–ù–û–ú =====

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    setToken(token) {
        this.token = token;
        localStorage.setItem('github_token', token); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
        console.log('GitHub token —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–∞–º—è—Ç–∏ –∏–ª–∏ localStorage
    getToken() {
        if (!this.token) {
            this.token = localStorage.getItem('github_token'); // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ localStorage
        }
        return this.token;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
    hasToken() {
        return !!this.getToken(); // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ boolean
    }

    // –û—á–∏—Å—Ç–∫–∞ —Ç–æ–∫–µ–Ω–∞ (–ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    clearToken() {
        this.token = null;
        localStorage.removeItem('github_token'); // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ localStorage
        console.log('GitHub token –æ—á–∏—â–µ–Ω');
    }

    // –ó–∞–ø—Ä–æ—Å —Ç–æ–∫–µ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
    async requestToken() {
        return new Promise((resolve) => {
            // –ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
            const token = prompt(
                'üîê –î–õ–Ø –û–ë–õ–ê–ß–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò üîê\n\n' +
                '–¢—Ä–µ–±—É–µ—Ç—Å—è GitHub Personal Access Token\n\n' +
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–æ–∫–µ–Ω–∞:\n' +
                '1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ GitHub.com ‚Üí Settings ‚Üí Developer settings\n' +
                '2. –í—ã–±–µ—Ä–∏—Ç–µ "Personal access tokens" ‚Üí "Tokens (classic)"\n' +
                '3. –ù–∞–∂–º–∏—Ç–µ "Generate new token"\n' +
                '4. –ù–∞–∑–≤–∞–Ω–∏–µ: "Shnek Journal"\n' +
                '5. –°—Ä–æ–∫: "No expiration" (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n' +
                '6. –ü—Ä–∞–≤–∞: ‚úÖ –û—Ç–º–µ—Ç—å—Ç–µ "repo" (–ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å)\n' +
                '7. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∂–µ:\n\n' +
                '–¢–æ–∫–µ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ghp_...'
            );
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
            if (token && token.trim()) {
                this.setToken(token.trim()); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
                resolve(true); // –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            } else {
                resolve(false); // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤–≤–æ–¥
            }
        });
    }

    // ===== –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–´ –° API GITHUB =====

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
    async testConnection() {
        if (!this.hasToken()) {
            throw new Error('GitHub token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }

        try {
            // –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
            const response = await fetch(
                `https://api.github.com/repos/${this.owner}/${this.repo}`,
                {
                    headers: {
                        'Authorization': `token ${this.getToken()}`, // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
                        'Accept': 'application/vnd.github.v3+json' // –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
                    }
                }
            );

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
            if (!response.ok) {
                throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${response.status}`);
            }

            console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub —É—Å–ø–µ—à–Ω–æ');
            return true;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub:', error);
            throw error; // –ü—Ä–æ–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—à–µ
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    async loadData() {
        if (!this.hasToken()) {
            throw new Error('GitHub token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }

        let retries = 3; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö
        
        while (retries > 0) {
            try {
                // –ó–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö
                const response = await fetch(
                    `https://api.github.com/repos/${this.owner}/${this.repo}/contents/${this.dataFile}`,
                    {
                        headers: {
                            'Authorization': `token ${this.getToken()}`,
                            'Accept': 'application/vnd.github.v3+json'
                        }
                    }
                );

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if (response.status === 404) {
                    console.log('–§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π');
                    return { line1: {}, line2: {}, line3: {} }; // –ü—É—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
                }

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ HTTP
                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    
                    // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –≤–µ—Ä—Å–∏–π (409)
                    if (response.status === 409 && retries > 1) {
                        retries--;
                        console.log(`–ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤–µ—Ä—Å–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞... (–æ—Å—Ç–∞–ª–æ—Å—å: ${retries})`);
                        await this.delay(1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                        continue;
                    }
                    
                    throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status} - ${errorData.message || response.statusText}`);
                }

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                const data = await response.json();
                const content = this.decodeBase64(data.content); // –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ base64
                const journalData = JSON.parse(content); // –ü–∞—Ä—Å–∏–Ω–≥ JSON
                
                console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ GitHub');
                return journalData;
            } catch (error) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
                if (error.message.includes('409') && retries > 1) {
                    retries--;
                    console.log(`–ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤–µ—Ä—Å–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞... (–æ—Å—Ç–∞–ª–æ—Å—å: ${retries})`);
                    await this.delay(1000);
                    continue;
                }
                
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
                
                // –û—á–∏—Å—Ç–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                if (error.message.includes('401') || error.message.includes('403')) {
                    this.clearToken();
                    throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω. –¢–æ–∫–µ–Ω –æ—á–∏—â–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω.');
                }
                
                throw error; // –ü—Ä–æ–±—Ä–æ—Å –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            }
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    async saveData(journalData) {
        if (!this.hasToken()) {
            throw new Error('GitHub token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }

        let retries = 3; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö
        
        while (retries > 0) {
            try {
                // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π SHA —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
                let sha = null;
                try {
                    const currentFileResponse = await fetch(
                        `https://api.github.com/repos/${this.owner}/${this.repo}/contents/${this.dataFile}`,
                        {
                            headers: {
                                'Authorization': `token ${this.getToken()}`,
                                'Accept': 'application/vnd.github.v3+json'
                            }
                        }
                    );
                    
                    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ SHA
                    if (currentFileResponse.ok) {
                        const data = await currentFileResponse.json();
                        sha = data.sha; // SHA –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π
                        console.log('–ü–æ–ª—É—á–µ–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã–π SHA —Ñ–∞–π–ª–∞:', sha.substring(0, 8) + '...');
                    }
                } catch (e) {
                    // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    console.log('–§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π');
                }

                // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                const content = this.encodeBase64(JSON.stringify(journalData, null, 2)); // –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ base64
                
                // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ GitHub
                const response = await fetch(
                    `https://api.github.com/repos/${this.owner}/${this.repo}/contents/${this.dataFile}`,
                    {
                        method: 'PUT', // –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                        headers: {
                            'Authorization': `token ${this.getToken()}`,
                            'Accept': 'application/vnd.github.v3+json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            message: `üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: ${new Date().toLocaleString('ru-RU')}`, // –ö–æ–º–º–∏—Ç-—Å–æ–æ–±—â–µ–Ω–∏–µ
                            content: content, // –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                            branch: this.branch, // –í–µ—Ç–∫–∞
                            sha: sha // SHA –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π (null –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞)
                        })
                    }
                );

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GitHub
                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤–µ—Ä—Å–∏–π (409) —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                    if (response.status === 409 && retries > 1) {
                        retries--;
                        console.log(`–ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤–µ—Ä—Å–∏–π –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –û–±–Ω–æ–≤–ª—è—é SHA –∏ –ø–æ–≤—Ç–æ—Ä—è—é... (–æ—Å—Ç–∞–ª–æ—Å—å: ${retries})`);
                        await this.delay(1000);
                        continue;
                    }
                    
                    // –û—á–∏—Å—Ç–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    if (response.status === 401 || response.status === 403) {
                        this.clearToken();
                        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω. –¢–æ–∫–µ–Ω –æ—á–∏—â–µ–Ω.');
                    }
                    
                    throw new Error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${response.status} - ${errorData.message || response.statusText}`);
                }

                console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ GitHub');
                return true;
            } catch (error) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
                if (error.message.includes('409') && retries > 1) {
                    retries--;
                    console.log(`–ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤–µ—Ä—Å–∏–π –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞... (–æ—Å—Ç–∞–ª–æ—Å—å: ${retries})`);
                    await this.delay(1000);
                    continue;
                }
                
                console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
                throw error; // –ü—Ä–æ–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫
            }
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫');
    }

    // ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ =====

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ base64 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å GitHub API)
    encodeBase64(str) {
        return btoa(unescape(encodeURIComponent(str)));
    }

    // –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ base64
    decodeBase64(str) {
        return decodeURIComponent(escape(atob(str)));
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
const gitHubDB = new GitHubDatabase();